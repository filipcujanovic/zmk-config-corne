 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define SYMBOLS 1
#define NAVIGATION 2
#define NUMBERS 3
#define BLUETOOTH 4

#define COMBO(NAME, BINDINGS, KEYPOS, TIMEOUT) \
combo_##NAME { \
    timeout-ms = <TIMEOUT>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    require-prior-idle-ms = <110>; \
};

/ {

    behaviors {
        isk: intuitive_sk {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&sk>;
        };
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <SYMBOLS NAVIGATION>;
            then-layer = <NUMBERS>;
        };
    };

    combos {
        compatible = "zmk,combos";
        COMBO(sqt, &kp SQT, 2 3, 50)
        COMBO(esc, &kp ESC, 3 4, 50)
        COMBO(caps_word, &caps_word, 25 34, 50)
        COMBO(bspc, &kp BSPC, 7 8, 50)
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &none &kp Q &kp W &kp E &kp R  &kp T              &kp Y   &kp U &kp I     &kp O   &kp P        &none
                &none &kp A &kp S &kp D &kp F  &kp G              &kp H   &kp J &kp K     &kp L   &kp SEMI     &none
                &none &kp Z &kp X &kp C &kp V  &kp B              &kp N   &kp M &kp COMMA &kp DOT &kp SLASH    &none
                             &none &mo SYMBOLS &kp ENTER          &kp SPC &mo NAVIGATION &none
            >;
        };

        symbol_layer {
            bindings = <
               &none &kp GRAVE &kp LT    &kp GT   &kp UNDER   &kp QMARK         &kp DQT   &kp TILDE &kp PIPE    &none     &none      &none
               &none &kp EXCL  &kp AT    &kp HASH &kp DLLR &kp PRCNT            &kp CARET &kp AMPS &kp ASTERISK &kp LPAR  &kp RPAR   &none
               &none &kp EQUAL &kp MINUS &kp PLUS &kp LBRC &kp RBRC             &kp LBKT  &kp RBKT &kp SQT      &kp COLON &kp BSLH   &none
                                  &none   &trans  &trans            &trans       &trans       &none
            >;
        };

        navigation_layer {
            bindings = <
               &none &mo BLUETOOTH &none     &none     &none       &none           &kp C_PREVIOUS &kp C_VOLUME_DOWN    &kp C_VOLUME_UP      &kp C_NEXT &kp C_PLAY_PAUSE   &none
               &none &sk LCTRL     &sk LALT  &sk LGUI  &skq LSHIFT &kp TAB         &kp LEFT       &kp DOWN             &kp UP               &kp RIGHT  &kp LA(BSPC)       &none
               &none &kp LG(Z)     &kp LG(X) &kp LG(C) &kp LG(V)   &none           &none          &kp C_BRIGHTNESS_DEC &kp C_BRIGHTNESS_INC &none      &none              &none
                                  &none   &trans  &trans            &trans       &trans       &none
            >;
        };

        numbers_layer {
            bindings = <
               &none &kp N1 &kp N2 &kp N3         &kp N4         &kp N5       &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &none
               &none &none  &none  &kp LG(LS(N4)) &kp LG(LS(N5)) &none        &none   &none   &none   &none   &none   &none
               &none &none  &none  &none          &none          &none        &none   &none   &none   &none   &none   &none
                                  &none   &trans  &trans            &trans       &trans       &none

            >;
        };

        bluetooth_layer {
            bindings = <
               &none &none   &none   &none   &none   &bootloader       &none        &none        &none        &none        &none         &none
               &none &none   &none   &none   &none   &none             &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &none
               &none &none   &none   &none   &none   &none             &bt BT_CLR   &none        &none        &none        &none         &none
                                     &none   &trans  &trans            &trans       &trans       &none

            >;
        };

    };
};
